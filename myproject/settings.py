"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# 從環境變數讀取 SECRET_KEY，如果環境變數沒有設定，則使用預設值
SECRET_KEY = os.getenv('SECRET_KEY', 'k4YoCmgmrmR7GjU42b9eSupNzqxKceqVv1C58bChcRwJZ7B1ol_qxsPNAAEePDUsMIw')

# 從環境變數讀取 DEBUG 設定，預設為 True（開發時使用，生產環境請務必設定為 False）
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'

# 從環境變數讀取 ALLOWED_HOSTS，這裡假設多個主機名稱用逗號隔開
# ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', '').split(',')
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'yourdomain.com']

# Application definition

INSTALLED_APPS = [
    # Django 內建 App
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # django-allauth apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

     # 自訂 App
    'accounts',
    'blog',
    'knowledgebase',
    'forum',
    "crispy_forms",
    "crispy_bootstrap5",  # 確保使用 Bootstrap 5 風格
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # 這裡包含全局模板資料夾
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # 預設 context 處理器...
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

WSGI_APPLICATION = 'myproject.wsgi.application'
SITE_ID = 1
AUTH_USER_MODEL = 'accounts.CustomUser'
SOCIALACCOUNT_ADAPTER = "allauth.socialaccount.adapter.DefaultSocialAccountAdapter"
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': os.getenv('GOOGLE_CLIENT_ID'),
            'secret': os.getenv('GOOGLE_CLIENT_SECRET'),
        },
        'SCOPE': [
            'email',
            'profile',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
    }
}
LOGIN_URL = '/accounts/login/'  # 這是你的登入頁面
LOGIN_REDIRECT_URL = '/admin/'  # 登入後導向 Django Admin
ACCOUNT_LOGOUT_REDIRECT_URL = "/"  # 登出後導向登入頁面
ACCOUNT_USER_MODEL_USERNAME_FIELD = None  
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_LOGIN_METHODS = {'email'}  # 使用 email 登入
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'none'  # 或根據需求設置為 'mandatory'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # 預設後端
    'allauth.account.auth_backends.AuthenticationBackend',  # allauth 後端
]
ACCOUNT_FORMS = {
    'signup': 'accounts.forms.CustomSignupForm',
}
# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.sqlite3',
         'NAME': BASE_DIR / 'db.sqlite3',
     }
 }
# 讀取環境變數設定
# POSTGRES_DB = os.environ.get('POSTGRES_DB', 'main_db_h0bb')
# POSTGRES_USER = os.environ.get('POSTGRES_USER', 'roger')
# POSTGRES_PASSWORD = os.environ.get('POSTGRES_PASSWORD', '80KVJNngx71076Vrp4iUkzNscqhSnITO')
# POSTGRES_HOST = os.environ.get('POSTGRES_HOST', 'postgresql://roger:80KVJNngx71076Vrp4iUkzNscqhSnITO@dpg-cuvvm35svqrc73ag1mh0-a.oregon-postgres.render.com/main_db_h0bb')
# POSTGRES_PORT = os.environ.get('POSTGRES_PORT', '5432')

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': POSTGRES_DB,
#         'USER': POSTGRES_USER,
#         'PASSWORD': POSTGRES_PASSWORD,
#         'HOST': POSTGRES_HOST,
#         'PORT': POSTGRES_PORT,
#     }
# }
# DATABASES = {
#     'default': dj_database_url.config(
#         default="postgresql://roger:80KVJNngx71076Vrp4iUkzNscqhSnITO@dpg-cuvvm35svqrc73ag1mh0-a.oregon-postgres.render.com/main_db_h0bb",
#         conn_max_age=600,  # 保持連線
#     )
# }
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
# 指定靜態檔案收集目錄
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
